input {
    tcp {
        port => $INPUT_PORT
        codec => json
    }
}

filter {
    metricize {
        # split event into domain and host event
       metrics => [ "domains", "host", "profile" ]
    }

    if [metric] == "domains" {
        # produce one event for each domain
        split {
            field => "value"
        }
    }

    if [metric] == "domains" or [metric] == "host" {
        # move fields form 'value' object to root
        ruby {
            code => "
                event.get('value').each {|k, v|
                    event.set(k, v)
                }
                event.remove('value')
            "
        }
    }

    if [metric] == "profile" {
        # receiving this:
        #
        # {
        #     "profile": {
        #        "name": "vm uuid",
        #        "metrics": [{
        #            "name": "cpu",
        #            "txmatrix": ...,
        #        }]
        #     }
        # }
        #
        # rearrange metric profiles to:
        #
        #  {
        #    "metric" => "profile",
        #    "UUID" => "c08b4f88-a833-4468-bf11-4c6c2dadd277",        
        #    "cpu" => "{"name":"cpu","txmatrix":[[100,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]],"stats":{"min":0,"max":100,"stddev":0,"avg":0}}",
        #    "io" => "...",
        #    "net" => "...",
        #  }

        ruby {
            code => "
                event.get('value').each {|k, v|
                    if k == 'name'
                        event.set('UUID', v)
                    elsif k == 'metrics'
                        v.each {|metric|
                            event.set(metric['name'], metric.to_json)
                        }
                    end
                }
                event.remove('value')
            "
        }
    }  

}


output {
    if [metric] == "domains" {
        # stdout {}
        influxdb {
            host => "$OUTPUT_HOST"
            port => $OUTPUT_PORT
            user => "$OUTPUT_USER"
            password => "$OUTPUT_PASS"
            db => "kvmtop"
            time_precision => "ms"
            measurement => "kvmtop.domains"
            send_as_tags => ["UUID", "name", "host_name"]
            use_event_fields_for_data_points => true
        }
    }

    if [metric] == "host" {
        # stdout {}
        influxdb {
            host => "$OUTPUT_HOST"
            port => $OUTPUT_PORT
            user => "$OUTPUT_USER"
            password => "$OUTPUT_PASS"
            db => "kvmtop"
            time_precision => "ms"
            measurement => "kvmtop.hosts"
            send_as_tags => ["host_name"]
            use_event_fields_for_data_points => true
        }    
    }

    if [metric] == "profile" {
        stdout {}
        influxdb {
            host => "$OUTPUT_HOST"
            port => $OUTPUT_PORT
            user => "$OUTPUT_USER"
            password => "$OUTPUT_PASS"
            db => "kvmtop"
            time_precision => "ms"
            measurement => "kvmtop.profile"
            send_as_tags => ["UUID"]
            use_event_fields_for_data_points => true
        }    
    }    
  
}
